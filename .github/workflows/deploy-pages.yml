name: Deploy Angular to GitHub Pages

on:
  push:
    branches: [ master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci

      # *** เลือก base-href ให้เหมาะกับ Project/User Pages ***
      # แนะนำให้ตั้ง script "build:pages" ไว้ใน package.json ตามข้อ 1
      - name: Build Angular
        run: npm run build:pages

      # (ทางเลือก) สร้าง .nojekyll กัน Jekyll ในโฟลเดอร์ผลลัพธ์
      - name: Add .nojekyll
        run: |
          DIST_DIR=$(find dist -type d -name browser -print -quit)
          touch "$DIST_DIR/.nojekyll"

      # (ทางเลือก) ถ้าคุณใช้ custom domain และเก็บโดเมนในไฟล์ CNAME ใน repo root
      # ก็ copy ลง dist ได้ เช่น:
      # - name: Add CNAME
      #   run: |
      #     DIST_DIR=$(find dist -type d -name browser -print -quit)
      #     [ -f CNAME ] && cp CNAME "$DIST_DIR/CNAME" || true

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Angular 20 default: dist/<project>/browser
          path: |
            dist/**/browser

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4